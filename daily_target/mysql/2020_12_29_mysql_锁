1. 全局锁
    顾名思义,全局锁就是对整个数据库实例加锁 命令为 Flush table with read lock,之后其他线程更新语句 创建表语句 和更新类的事务提交都将会被阻塞
    全局锁的典型使用场景是,做全库逻辑备份 也就是把整个表都select 出来存成文本
    缺点 
    如果主库做备份那么整库都只读 那么在备份期间都不能执行更新，所有业务就得停止
    如果从库上备份,那么备份期间从库不能执行主库同步过来的binlog,会导致主从延迟
    处理方法 如果数据库引擎支持可重复读事务的话 直接开启一个可重复读的事务 在事务开启时就拿到了那一刻的视图 这样就不会出现上面的问题了
    但是如果不支持事务比如myisam这种不支持事务的引擎 就必须得用FTWRL方式保证数据的一致性
    
    set global readonly = true 和FWTWRL
    set global readonly = true 虽然他也可以让全库进入只读状态
    1. 在一些其他系统中,readonly的值会被用来做其他逻辑,比如判断是主库还是从库(从库不允许修改)，因此修改这个值影响比较大
    2. 在异常处理上有差异，如果FTWRL命令以后客户端打开连接那么MYSQL会自动释放这个全局锁，整个库回到可以正常的更新状态，但是readonly 则会导致数据库一直处于readonly状态
    所以综上两点 尽量使用FWTRL而少使用 set global readonly
    
2. 表级锁( 表锁,元数据锁 )
   表级锁的语法 lock tables read/write 
