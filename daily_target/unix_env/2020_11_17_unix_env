unix 环境高级编程第三版 多线程
线程的标识 pthread_t 是一个结构体类型
所以如果需要识别以线程ID作为标识的数据结构时 就需要使用pthead_self()函数和pthread_equal(pthread_t t1, pthread_t t2)

线程的创建
int pthread_create( pthread_t *restrict tidp,       //pthread_t类型指针 用来取得线程id
                    const pthread attr_t* restrict attr, 线程的属性
                    void *((*start_rtn)(void*),    //线程入口函数 是一个函数指针
                    void* restrict arg //入口函数参数
                   )
函数参数含义
当pthread 成功返回时
tid 新创建的线程的线程id 会被设置成tidp指向的内存单元
attr 用于定制各种不同的线程属性(一般情况下传递一个null足够)
start_rtn和arg 线程的入口函数地址,  该函数只有一个无类型指针参数arg 如果要传递多个参数  则把这些参数放到一个结构体中 然后把结构体的地址作为arg参数传入

